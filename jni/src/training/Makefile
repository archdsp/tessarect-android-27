# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/training/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.








am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/tesseract
pkgincludedir = $(includedir)/tesseract
pkglibdir = $(libdir)/tesseract
pkglibexecdir = $(libexecdir)/tesseract
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#am__append_1 = -DDISABLED_LEGACY_ENGINE

# TODO: training programs can not be linked to shared library created
# with -fvisibility
#am__append_2 = -all-static
am__append_3 = mergenf.h
bin_PROGRAMS = combine_lang_model$(EXEEXT) combine_tessdata$(EXEEXT) \
	dawg2wordlist$(EXEEXT) lstmeval$(EXEEXT) lstmtraining$(EXEEXT) \
	merge_unicharsets$(EXEEXT) set_unicharset_properties$(EXEEXT) \
	text2image$(EXEEXT) unicharset_extractor$(EXEEXT) \
	wordlist2dawg$(EXEEXT) $(am__EXEEXT_1)
am__append_4 = \
   ambiguous_words \
   classifier_tester \
   cntraining \
   mftraining \
   shapeclustering

#am__append_5 = -lws2_32
#am__append_6 = -lws2_32
#am__append_7 = -lws2_32
#am__append_8 = -lws2_32
#am__append_9 = -lws2_32
#am__append_10 = -lws2_32
#am__append_11 = -lws2_32
#am__append_12 = -lws2_32
#am__append_13 = -lws2_32
#am__append_14 = -lws2_32
#am__append_15 = -lws2_32
#am__append_16 = -lws2_32
subdir = src/training
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_split_version.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__noinst_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config_auto.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = ambiguous_words$(EXEEXT) \
	classifier_tester$(EXEEXT) \
	cntraining$(EXEEXT) \
	mftraining$(EXEEXT) \
	shapeclustering$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(scriptsdir)"
PROGRAMS = $(bin_PROGRAMS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libtesseract_tessopt_la_LIBADD =
am_libtesseract_tessopt_la_OBJECTS = tessopt.lo
libtesseract_tessopt_la_OBJECTS =  \
	$(am_libtesseract_tessopt_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libtesseract_training_la_DEPENDENCIES =  \
	../cutil/libtesseract_cutil.la
am_libtesseract_training_la_OBJECTS = boxchar.lo commandlineflags.lo \
	commontraining.lo degradeimage.lo icuerrorcode.lo \
	lang_model_helpers.lo ligature_table.lo lstmtester.lo \
	normstrngs.lo pango_font_info.lo stringrenderer.lo tlog.lo \
	unicharset_training_utils.lo validate_grapheme.lo \
	validate_indic.lo validate_javanese.lo validate_khmer.lo \
	validate_myanmar.lo validator.lo
libtesseract_training_la_OBJECTS =  \
	$(am_libtesseract_training_la_OBJECTS)
am__ambiguous_words_SOURCES_DIST = ambiguous_words.cpp
am_ambiguous_words_OBJECTS =  \
	ambiguous_words.$(OBJEXT)
ambiguous_words_OBJECTS = $(am_ambiguous_words_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
ambiguous_words_DEPENDENCIES =  \
	libtesseract_training.la \
	libtesseract_tessopt.la \
	../api/libtesseract.la \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
ambiguous_words_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(ambiguous_words_LDFLAGS) \
	$(LDFLAGS) -o $@
am__classifier_tester_SOURCES_DIST = classifier_tester.cpp
am_classifier_tester_OBJECTS =  \
	classifier_tester.$(OBJEXT)
classifier_tester_OBJECTS = $(am_classifier_tester_OBJECTS)
classifier_tester_DEPENDENCIES =  \
	libtesseract_training.la \
	libtesseract_tessopt.la \
	../api/libtesseract.la \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
classifier_tester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(classifier_tester_LDFLAGS) \
	$(LDFLAGS) -o $@
am__cntraining_SOURCES_DIST = cntraining.cpp
am_cntraining_OBJECTS =  \
	cntraining.$(OBJEXT)
cntraining_OBJECTS = $(am_cntraining_OBJECTS)
cntraining_DEPENDENCIES =  \
	libtesseract_training.la \
	libtesseract_tessopt.la \
	../api/libtesseract.la \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
cntraining_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(cntraining_LDFLAGS) $(LDFLAGS) -o $@
am_combine_lang_model_OBJECTS = combine_lang_model.$(OBJEXT)
combine_lang_model_OBJECTS = $(am_combine_lang_model_OBJECTS)
combine_lang_model_DEPENDENCIES = libtesseract_training.la \
	libtesseract_tessopt.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../api/libtesseract.la \
	$(am__DEPENDENCIES_2)
am_combine_tessdata_OBJECTS = combine_tessdata.$(OBJEXT)
combine_tessdata_OBJECTS = $(am_combine_tessdata_OBJECTS)
combine_tessdata_DEPENDENCIES = ../api/libtesseract.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
combine_tessdata_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(combine_tessdata_LDFLAGS) \
	$(LDFLAGS) -o $@
am_dawg2wordlist_OBJECTS = dawg2wordlist.$(OBJEXT)
dawg2wordlist_OBJECTS = $(am_dawg2wordlist_OBJECTS)
dawg2wordlist_DEPENDENCIES = libtesseract_tessopt.la \
	../api/libtesseract.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
dawg2wordlist_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(dawg2wordlist_LDFLAGS) $(LDFLAGS) \
	-o $@
am_lstmeval_OBJECTS = lstmeval.$(OBJEXT)
lstmeval_OBJECTS = $(am_lstmeval_OBJECTS)
lstmeval_DEPENDENCIES = libtesseract_training.la \
	libtesseract_tessopt.la $(am__DEPENDENCIES_1) \
	../api/libtesseract.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_lstmtraining_OBJECTS = lstmtraining.$(OBJEXT)
lstmtraining_OBJECTS = $(am_lstmtraining_OBJECTS)
lstmtraining_DEPENDENCIES = libtesseract_training.la \
	libtesseract_tessopt.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../api/libtesseract.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_merge_unicharsets_OBJECTS = merge_unicharsets.$(OBJEXT)
merge_unicharsets_OBJECTS = $(am_merge_unicharsets_OBJECTS)
merge_unicharsets_DEPENDENCIES = libtesseract_tessopt.la \
	../api/libtesseract.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
merge_unicharsets_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(merge_unicharsets_LDFLAGS) \
	$(LDFLAGS) -o $@
am__mftraining_SOURCES_DIST = mftraining.cpp mergenf.cpp
am_mftraining_OBJECTS =  \
	mftraining.$(OBJEXT) \
	mergenf.$(OBJEXT)
mftraining_OBJECTS = $(am_mftraining_OBJECTS)
mftraining_DEPENDENCIES =  \
	libtesseract_training.la \
	libtesseract_tessopt.la \
	$(am__DEPENDENCIES_1) \
	../api/libtesseract.la \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
mftraining_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(mftraining_LDFLAGS) $(LDFLAGS) -o $@
am_set_unicharset_properties_OBJECTS =  \
	set_unicharset_properties.$(OBJEXT)
set_unicharset_properties_OBJECTS =  \
	$(am_set_unicharset_properties_OBJECTS)
set_unicharset_properties_DEPENDENCIES = libtesseract_training.la \
	libtesseract_tessopt.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../api/libtesseract.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
set_unicharset_properties_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(set_unicharset_properties_LDFLAGS) $(LDFLAGS) -o $@
am__shapeclustering_SOURCES_DIST = shapeclustering.cpp
am_shapeclustering_OBJECTS =  \
	shapeclustering.$(OBJEXT)
shapeclustering_OBJECTS = $(am_shapeclustering_OBJECTS)
shapeclustering_DEPENDENCIES =  \
	libtesseract_training.la \
	libtesseract_tessopt.la \
	../api/libtesseract.la \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
shapeclustering_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(shapeclustering_LDFLAGS) \
	$(LDFLAGS) -o $@
am_text2image_OBJECTS = text2image.$(OBJEXT)
text2image_OBJECTS = $(am_text2image_OBJECTS)
text2image_DEPENDENCIES = libtesseract_training.la \
	libtesseract_tessopt.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../api/libtesseract.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
text2image_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(text2image_LDFLAGS) $(LDFLAGS) -o $@
am_unicharset_extractor_OBJECTS = unicharset_extractor.$(OBJEXT)
unicharset_extractor_OBJECTS = $(am_unicharset_extractor_OBJECTS)
unicharset_extractor_DEPENDENCIES = libtesseract_training.la \
	libtesseract_tessopt.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) ../api/libtesseract.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
unicharset_extractor_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(unicharset_extractor_LDFLAGS) \
	$(LDFLAGS) -o $@
am_wordlist2dawg_OBJECTS = wordlist2dawg.$(OBJEXT)
wordlist2dawg_OBJECTS = $(am_wordlist2dawg_OBJECTS)
wordlist2dawg_DEPENDENCIES = libtesseract_tessopt.la \
	../api/libtesseract.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
wordlist2dawg_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(wordlist2dawg_LDFLAGS) $(LDFLAGS) \
	-o $@
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/ambiguous_words.Po \
	./$(DEPDIR)/boxchar.Plo ./$(DEPDIR)/classifier_tester.Po \
	./$(DEPDIR)/cntraining.Po ./$(DEPDIR)/combine_lang_model.Po \
	./$(DEPDIR)/combine_tessdata.Po \
	./$(DEPDIR)/commandlineflags.Plo \
	./$(DEPDIR)/commontraining.Plo ./$(DEPDIR)/dawg2wordlist.Po \
	./$(DEPDIR)/degradeimage.Plo ./$(DEPDIR)/icuerrorcode.Plo \
	./$(DEPDIR)/lang_model_helpers.Plo \
	./$(DEPDIR)/ligature_table.Plo ./$(DEPDIR)/lstmeval.Po \
	./$(DEPDIR)/lstmtester.Plo ./$(DEPDIR)/lstmtraining.Po \
	./$(DEPDIR)/merge_unicharsets.Po ./$(DEPDIR)/mergenf.Po \
	./$(DEPDIR)/mftraining.Po ./$(DEPDIR)/normstrngs.Plo \
	./$(DEPDIR)/pango_font_info.Plo \
	./$(DEPDIR)/set_unicharset_properties.Po \
	./$(DEPDIR)/shapeclustering.Po ./$(DEPDIR)/stringrenderer.Plo \
	./$(DEPDIR)/tessopt.Plo ./$(DEPDIR)/text2image.Po \
	./$(DEPDIR)/tlog.Plo ./$(DEPDIR)/unicharset_extractor.Po \
	./$(DEPDIR)/unicharset_training_utils.Plo \
	./$(DEPDIR)/validate_grapheme.Plo \
	./$(DEPDIR)/validate_indic.Plo \
	./$(DEPDIR)/validate_javanese.Plo \
	./$(DEPDIR)/validate_khmer.Plo \
	./$(DEPDIR)/validate_myanmar.Plo ./$(DEPDIR)/validator.Plo \
	./$(DEPDIR)/wordlist2dawg.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libtesseract_tessopt_la_SOURCES) \
	$(libtesseract_training_la_SOURCES) $(ambiguous_words_SOURCES) \
	$(classifier_tester_SOURCES) $(cntraining_SOURCES) \
	$(combine_lang_model_SOURCES) $(combine_tessdata_SOURCES) \
	$(dawg2wordlist_SOURCES) $(lstmeval_SOURCES) \
	$(lstmtraining_SOURCES) $(merge_unicharsets_SOURCES) \
	$(mftraining_SOURCES) $(set_unicharset_properties_SOURCES) \
	$(shapeclustering_SOURCES) $(text2image_SOURCES) \
	$(unicharset_extractor_SOURCES) $(wordlist2dawg_SOURCES)
DIST_SOURCES = $(libtesseract_tessopt_la_SOURCES) \
	$(libtesseract_training_la_SOURCES) \
	$(am__ambiguous_words_SOURCES_DIST) \
	$(am__classifier_tester_SOURCES_DIST) \
	$(am__cntraining_SOURCES_DIST) $(combine_lang_model_SOURCES) \
	$(combine_tessdata_SOURCES) $(dawg2wordlist_SOURCES) \
	$(lstmeval_SOURCES) $(lstmtraining_SOURCES) \
	$(merge_unicharsets_SOURCES) $(am__mftraining_SOURCES_DIST) \
	$(set_unicharset_properties_SOURCES) \
	$(am__shapeclustering_SOURCES_DIST) $(text2image_SOURCES) \
	$(unicharset_extractor_SOURCES) $(wordlist2dawg_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(scripts_DATA)
am__noinst_HEADERS_DIST = boxchar.h commandlineflags.h \
	commontraining.h degradeimage.h icuerrorcode.h \
	lang_model_helpers.h ligature_table.h lstmtester.h \
	normstrngs.h pango_font_info.h stringrenderer.h tessopt.h \
	tlog.h unicharset_training_utils.h util.h validate_grapheme.h \
	validate_indic.h validate_javanese.h validate_khmer.h \
	validate_myanmar.h validator.h mergenf.h
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/dsparch/Project/SDK/tesseract/config/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_CPPFLAGS =  -DNDEBUG -DPANGO_ENABLE_ENGINE \
	-I$(top_builddir)/src/api -I$(top_srcdir)/src/api \
	-I$(top_srcdir)/src/ccmain -I$(top_srcdir)/src/ccutil \
	-I$(top_srcdir)/src/ccstruct -I$(top_srcdir)/src/lstm \
	-I$(top_srcdir)/src/arch -I$(top_srcdir)/src/viewer \
	-I$(top_srcdir)/src/textord -I$(top_srcdir)/src/dict \
	-I$(top_srcdir)/src/classify -I$(top_srcdir)/src/wordrec \
	-I$(top_srcdir)/src/cutil $(am__append_1)
AM_DEFAULT_VERBOSITY = 1
AM_LDFLAGS =  $(am__append_2)
AR = ar
AUTOCONF = ${SHELL} /home/dsparch/Project/SDK/tesseract/config/missing autoconf
AUTOHEADER = ${SHELL} /home/dsparch/Project/SDK/tesseract/config/missing autoheader
AUTOMAKE = ${SHELL} /home/dsparch/Project/SDK/tesseract/config/missing automake-1.16
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS =  -I/usr/local/include/leptonica  -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/lib/libffi-3.2.1/include -I/usr/include/fribidi  -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/lib/libffi-3.2.1/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/uuid 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -std=c++14
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FRAMEWORK_OPENCL = 
GENERIC_API_VERSION = 5.0
GENERIC_LIBRARY_NAME = tesseract
GENERIC_LIBRARY_VERSION = 5:0
GENERIC_MAJOR_VERSION = 5
GENERIC_MICRO_VERSION = 0
GENERIC_MINOR_VERSION = 0
GENERIC_RELEASE = 5.0
GENERIC_VERSION = 5.0.0
GREP = /usr/bin/grep
ICU_I18N_CFLAGS = 
ICU_I18N_LIBS = -licui18n -licuuc -licudata 
ICU_UC_CFLAGS = 
ICU_UC_LIBS = -licuuc -licudata 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEPTONICA_CFLAGS = -I/usr/local/include/leptonica 
LEPTONICA_LIBS = -L/usr/local/lib -llept 
LIBOBJS = 
LIBS = -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/dsparch/Project/SDK/tesseract/config/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
NOUNDEFINED = 
OBJDUMP = objdump
OBJEXT = o
OPENCL_CPPFLAGS = 
OPENCL_LDFLAGS = 
OPENMP_CXXFLAGS = -fopenmp
OTOOL = 
OTOOL64 = 
PACKAGE = tesseract
PACKAGE_BUGREPORT = https://github.com/tesseract-ocr/tesseract/issues
PACKAGE_DATE = 10/29
PACKAGE_NAME = tesseract
PACKAGE_STRING = tesseract 5.0.0-alpha-25-g0fe9
PACKAGE_TARNAME = tesseract
PACKAGE_URL = https://github.com/tesseract-ocr/tesseract/
PACKAGE_VERSION = 5.0.0-alpha-25-g0fe9
PACKAGE_YEAR = 2018
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 5.0.0-alpha-25-g0fe9
abs_builddir = /home/dsparch/Project/SDK/tesseract/src/training
abs_srcdir = /home/dsparch/Project/SDK/tesseract/src/training
abs_top_builddir = /home/dsparch/Project/SDK/tesseract
abs_top_srcdir = /home/dsparch/Project/SDK/tesseract
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
cairo_CFLAGS = -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/lib/libffi-3.2.1/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/uuid 
cairo_LIBS = -lcairo 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_asciidoc = false
have_xsltproc = true
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/dsparch/Project/SDK/tesseract/config/install-sh
libarchive_CFLAGS = 
libarchive_LIBS = -larchive 
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pango_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/lib/libffi-3.2.1/include -I/usr/include/fribidi 
pango_LIBS = -lpango-1.0 -lgobject-2.0 -lglib-2.0 
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
bin_SCRIPTS = language-specific.sh tesstrain.sh
scripts_DATA = tesstrain_utils.sh
scriptsdir = $(bindir)
noinst_HEADERS = boxchar.h commandlineflags.h commontraining.h \
	degradeimage.h icuerrorcode.h lang_model_helpers.h \
	ligature_table.h lstmtester.h normstrngs.h pango_font_info.h \
	stringrenderer.h tessopt.h tlog.h unicharset_training_utils.h \
	util.h validate_grapheme.h validate_indic.h \
	validate_javanese.h validate_khmer.h validate_myanmar.h \
	validator.h $(am__append_3)
noinst_LTLIBRARIES = libtesseract_training.la libtesseract_tessopt.la
libtesseract_training_la_LIBADD = \
    ../cutil/libtesseract_cutil.la

#    ../api/libtesseract.la
libtesseract_training_la_SOURCES = \
    boxchar.cpp \
    commandlineflags.cpp \
    commontraining.cpp \
    degradeimage.cpp \
    icuerrorcode.cpp \
    lang_model_helpers.cpp \
    ligature_table.cpp \
    lstmtester.cpp \
    normstrngs.cpp \
    pango_font_info.cpp \
    stringrenderer.cpp \
    tlog.cpp \
    unicharset_training_utils.cpp \
    validate_grapheme.cpp \
    validate_indic.cpp \
    validate_javanese.cpp \
    validate_khmer.cpp \
    validate_myanmar.cpp \
    validator.cpp

libtesseract_tessopt_la_SOURCES = \
    tessopt.cpp

ambiguous_words_SOURCES = ambiguous_words.cpp
ambiguous_words_LDADD =  \
	libtesseract_training.la \
	libtesseract_tessopt.la \
	../api/libtesseract.la \
	$(am__append_5) \
	$(LEPTONICA_LIBS) $(extralib)
classifier_tester_SOURCES = classifier_tester.cpp
#classifier_tester_LDFLAGS = -static
classifier_tester_LDADD =  \
	libtesseract_training.la \
	libtesseract_tessopt.la \
	../api/libtesseract.la \
	$(am__append_6) \
	$(LEPTONICA_LIBS) $(extralib)
cntraining_SOURCES = cntraining.cpp
#cntraining_LDFLAGS = -static
cntraining_LDADD =  \
	libtesseract_training.la \
	libtesseract_tessopt.la \
	../api/libtesseract.la \
	$(am__append_7) \
	$(LEPTONICA_LIBS) $(extralib)
mftraining_SOURCES = mftraining.cpp mergenf.cpp
#mftraining_LDFLAGS = -static
mftraining_LDADD =  \
	libtesseract_training.la \
	libtesseract_tessopt.la \
	$(ICU_UC_LIBS) \
	../api/libtesseract.la \
	$(am__append_8) \
	$(LEPTONICA_LIBS) $(extralib)
shapeclustering_SOURCES = shapeclustering.cpp
#shapeclustering_LDFLAGS = -static
shapeclustering_LDADD =  \
	libtesseract_training.la \
	libtesseract_tessopt.la \
	../api/libtesseract.la \
	$(am__append_9) \
	$(LEPTONICA_LIBS) $(extralib)
combine_lang_model_SOURCES = combine_lang_model.cpp
#combine_lang_model_LDFLAGS = -static
combine_lang_model_LDADD = libtesseract_training.la \
	libtesseract_tessopt.la $(ICU_I18N_LIBS) $(ICU_UC_LIBS) \
	../api/libtesseract.la $(extralib)
combine_tessdata_SOURCES = combine_tessdata.cpp
#combine_tessdata_LDFLAGS = -static
combine_tessdata_LDADD = ../api/libtesseract.la $(am__append_10) \
	$(LEPTONICA_LIBS) $(extralib)
dawg2wordlist_SOURCES = dawg2wordlist.cpp
#dawg2wordlist_LDFLAGS = -static
dawg2wordlist_LDADD = libtesseract_tessopt.la ../api/libtesseract.la \
	$(am__append_11) $(LEPTONICA_LIBS) $(extralib)
lstmeval_SOURCES = lstmeval.cpp
#lstmeval_LDFLAGS = -static
lstmeval_LDADD = libtesseract_training.la libtesseract_tessopt.la \
	$(ICU_UC_LIBS) ../api/libtesseract.la $(LEPTONICA_LIBS) \
	$(extralib)
lstmtraining_SOURCES = lstmtraining.cpp
#lstmtraining_LDFLAGS = -static
lstmtraining_LDADD = libtesseract_training.la libtesseract_tessopt.la \
	$(ICU_I18N_LIBS) $(ICU_UC_LIBS) ../api/libtesseract.la \
	$(LEPTONICA_LIBS) $(extralib)
merge_unicharsets_SOURCES = merge_unicharsets.cpp
#merge_unicharsets_LDFLAGS = -static
merge_unicharsets_LDADD = libtesseract_tessopt.la \
	../api/libtesseract.la $(am__append_12) $(extralib)
set_unicharset_properties_SOURCES = set_unicharset_properties.cpp
set_unicharset_properties_LDADD = libtesseract_training.la \
	libtesseract_tessopt.la $(ICU_I18N_LIBS) $(ICU_UC_LIBS) \
	../api/libtesseract.la $(am__append_13) $(LEPTONICA_LIBS) \
	$(extralib)
text2image_SOURCES = text2image.cpp
#text2image_LDFLAGS = -static
text2image_LDADD = libtesseract_training.la libtesseract_tessopt.la \
	$(ICU_I18N_LIBS) $(ICU_UC_LIBS) ../api/libtesseract.la \
	$(ICU_UC_LIBS) -lpango-1.0 -lpangocairo-1.0 -lgobject-2.0 \
	-lglib-2.0 -lcairo -lpangoft2-1.0 -lfontconfig \
	$(am__append_15) $(LEPTONICA_LIBS) $(extralib)
unicharset_extractor_SOURCES = unicharset_extractor.cpp
#unicharset_extractor_LDFLAGS = -static
unicharset_extractor_LDADD = libtesseract_training.la \
	libtesseract_tessopt.la $(ICU_I18N_LIBS) $(ICU_UC_LIBS) \
	../api/libtesseract.la $(am__append_14) $(LEPTONICA_LIBS) \
	$(extralib)
wordlist2dawg_SOURCES = wordlist2dawg.cpp
#wordlist2dawg_LDFLAGS = -static
wordlist2dawg_LDADD = libtesseract_tessopt.la ../api/libtesseract.la \
	$(am__append_16) $(LEPTONICA_LIBS) $(extralib)
ambiguous_words_LDFLAGS = $(OPENCL_LDFLAGS)
classifier_tester_LDFLAGS = $(OPENCL_LDFLAGS)
cntraining_LDFLAGS = $(OPENCL_LDFLAGS)
mftraining_LDFLAGS = $(OPENCL_LDFLAGS)
shapeclustering_LDFLAGS = $(OPENCL_LDFLAGS)
combine_tessdata_LDFLAGS = $(OPENCL_LDFLAGS)
dawg2wordlist_LDFLAGS = $(OPENCL_LDFLAGS)
merge_unicharsets_LDFLAGS = $(OPENCL_LDFLAGS)
set_unicharset_properties_LDFLAGS = $(OPENCL_LDFLAGS)
text2image_LDFLAGS = $(OPENCL_LDFLAGS)
unicharset_extractor_LDFLAGS = $(OPENCL_LDFLAGS)
wordlist2dawg_LDFLAGS = $(OPENCL_LDFLAGS)
extralib = $(libarchive_LIBS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/training/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/training/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libtesseract_tessopt.la: $(libtesseract_tessopt_la_OBJECTS) $(libtesseract_tessopt_la_DEPENDENCIES) $(EXTRA_libtesseract_tessopt_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libtesseract_tessopt_la_OBJECTS) $(libtesseract_tessopt_la_LIBADD) $(LIBS)

libtesseract_training.la: $(libtesseract_training_la_OBJECTS) $(libtesseract_training_la_DEPENDENCIES) $(EXTRA_libtesseract_training_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libtesseract_training_la_OBJECTS) $(libtesseract_training_la_LIBADD) $(LIBS)

ambiguous_words$(EXEEXT): $(ambiguous_words_OBJECTS) $(ambiguous_words_DEPENDENCIES) $(EXTRA_ambiguous_words_DEPENDENCIES) 
	@rm -f ambiguous_words$(EXEEXT)
	$(AM_V_CXXLD)$(ambiguous_words_LINK) $(ambiguous_words_OBJECTS) $(ambiguous_words_LDADD) $(LIBS)

classifier_tester$(EXEEXT): $(classifier_tester_OBJECTS) $(classifier_tester_DEPENDENCIES) $(EXTRA_classifier_tester_DEPENDENCIES) 
	@rm -f classifier_tester$(EXEEXT)
	$(AM_V_CXXLD)$(classifier_tester_LINK) $(classifier_tester_OBJECTS) $(classifier_tester_LDADD) $(LIBS)

cntraining$(EXEEXT): $(cntraining_OBJECTS) $(cntraining_DEPENDENCIES) $(EXTRA_cntraining_DEPENDENCIES) 
	@rm -f cntraining$(EXEEXT)
	$(AM_V_CXXLD)$(cntraining_LINK) $(cntraining_OBJECTS) $(cntraining_LDADD) $(LIBS)

combine_lang_model$(EXEEXT): $(combine_lang_model_OBJECTS) $(combine_lang_model_DEPENDENCIES) $(EXTRA_combine_lang_model_DEPENDENCIES) 
	@rm -f combine_lang_model$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(combine_lang_model_OBJECTS) $(combine_lang_model_LDADD) $(LIBS)

combine_tessdata$(EXEEXT): $(combine_tessdata_OBJECTS) $(combine_tessdata_DEPENDENCIES) $(EXTRA_combine_tessdata_DEPENDENCIES) 
	@rm -f combine_tessdata$(EXEEXT)
	$(AM_V_CXXLD)$(combine_tessdata_LINK) $(combine_tessdata_OBJECTS) $(combine_tessdata_LDADD) $(LIBS)

dawg2wordlist$(EXEEXT): $(dawg2wordlist_OBJECTS) $(dawg2wordlist_DEPENDENCIES) $(EXTRA_dawg2wordlist_DEPENDENCIES) 
	@rm -f dawg2wordlist$(EXEEXT)
	$(AM_V_CXXLD)$(dawg2wordlist_LINK) $(dawg2wordlist_OBJECTS) $(dawg2wordlist_LDADD) $(LIBS)

lstmeval$(EXEEXT): $(lstmeval_OBJECTS) $(lstmeval_DEPENDENCIES) $(EXTRA_lstmeval_DEPENDENCIES) 
	@rm -f lstmeval$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(lstmeval_OBJECTS) $(lstmeval_LDADD) $(LIBS)

lstmtraining$(EXEEXT): $(lstmtraining_OBJECTS) $(lstmtraining_DEPENDENCIES) $(EXTRA_lstmtraining_DEPENDENCIES) 
	@rm -f lstmtraining$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(lstmtraining_OBJECTS) $(lstmtraining_LDADD) $(LIBS)

merge_unicharsets$(EXEEXT): $(merge_unicharsets_OBJECTS) $(merge_unicharsets_DEPENDENCIES) $(EXTRA_merge_unicharsets_DEPENDENCIES) 
	@rm -f merge_unicharsets$(EXEEXT)
	$(AM_V_CXXLD)$(merge_unicharsets_LINK) $(merge_unicharsets_OBJECTS) $(merge_unicharsets_LDADD) $(LIBS)

mftraining$(EXEEXT): $(mftraining_OBJECTS) $(mftraining_DEPENDENCIES) $(EXTRA_mftraining_DEPENDENCIES) 
	@rm -f mftraining$(EXEEXT)
	$(AM_V_CXXLD)$(mftraining_LINK) $(mftraining_OBJECTS) $(mftraining_LDADD) $(LIBS)

set_unicharset_properties$(EXEEXT): $(set_unicharset_properties_OBJECTS) $(set_unicharset_properties_DEPENDENCIES) $(EXTRA_set_unicharset_properties_DEPENDENCIES) 
	@rm -f set_unicharset_properties$(EXEEXT)
	$(AM_V_CXXLD)$(set_unicharset_properties_LINK) $(set_unicharset_properties_OBJECTS) $(set_unicharset_properties_LDADD) $(LIBS)

shapeclustering$(EXEEXT): $(shapeclustering_OBJECTS) $(shapeclustering_DEPENDENCIES) $(EXTRA_shapeclustering_DEPENDENCIES) 
	@rm -f shapeclustering$(EXEEXT)
	$(AM_V_CXXLD)$(shapeclustering_LINK) $(shapeclustering_OBJECTS) $(shapeclustering_LDADD) $(LIBS)

text2image$(EXEEXT): $(text2image_OBJECTS) $(text2image_DEPENDENCIES) $(EXTRA_text2image_DEPENDENCIES) 
	@rm -f text2image$(EXEEXT)
	$(AM_V_CXXLD)$(text2image_LINK) $(text2image_OBJECTS) $(text2image_LDADD) $(LIBS)

unicharset_extractor$(EXEEXT): $(unicharset_extractor_OBJECTS) $(unicharset_extractor_DEPENDENCIES) $(EXTRA_unicharset_extractor_DEPENDENCIES) 
	@rm -f unicharset_extractor$(EXEEXT)
	$(AM_V_CXXLD)$(unicharset_extractor_LINK) $(unicharset_extractor_OBJECTS) $(unicharset_extractor_LDADD) $(LIBS)

wordlist2dawg$(EXEEXT): $(wordlist2dawg_OBJECTS) $(wordlist2dawg_DEPENDENCIES) $(EXTRA_wordlist2dawg_DEPENDENCIES) 
	@rm -f wordlist2dawg$(EXEEXT)
	$(AM_V_CXXLD)$(wordlist2dawg_LINK) $(wordlist2dawg_OBJECTS) $(wordlist2dawg_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ambiguous_words.Po # am--include-marker
include ./$(DEPDIR)/boxchar.Plo # am--include-marker
include ./$(DEPDIR)/classifier_tester.Po # am--include-marker
include ./$(DEPDIR)/cntraining.Po # am--include-marker
include ./$(DEPDIR)/combine_lang_model.Po # am--include-marker
include ./$(DEPDIR)/combine_tessdata.Po # am--include-marker
include ./$(DEPDIR)/commandlineflags.Plo # am--include-marker
include ./$(DEPDIR)/commontraining.Plo # am--include-marker
include ./$(DEPDIR)/dawg2wordlist.Po # am--include-marker
include ./$(DEPDIR)/degradeimage.Plo # am--include-marker
include ./$(DEPDIR)/icuerrorcode.Plo # am--include-marker
include ./$(DEPDIR)/lang_model_helpers.Plo # am--include-marker
include ./$(DEPDIR)/ligature_table.Plo # am--include-marker
include ./$(DEPDIR)/lstmeval.Po # am--include-marker
include ./$(DEPDIR)/lstmtester.Plo # am--include-marker
include ./$(DEPDIR)/lstmtraining.Po # am--include-marker
include ./$(DEPDIR)/merge_unicharsets.Po # am--include-marker
include ./$(DEPDIR)/mergenf.Po # am--include-marker
include ./$(DEPDIR)/mftraining.Po # am--include-marker
include ./$(DEPDIR)/normstrngs.Plo # am--include-marker
include ./$(DEPDIR)/pango_font_info.Plo # am--include-marker
include ./$(DEPDIR)/set_unicharset_properties.Po # am--include-marker
include ./$(DEPDIR)/shapeclustering.Po # am--include-marker
include ./$(DEPDIR)/stringrenderer.Plo # am--include-marker
include ./$(DEPDIR)/tessopt.Plo # am--include-marker
include ./$(DEPDIR)/text2image.Po # am--include-marker
include ./$(DEPDIR)/tlog.Plo # am--include-marker
include ./$(DEPDIR)/unicharset_extractor.Po # am--include-marker
include ./$(DEPDIR)/unicharset_training_utils.Plo # am--include-marker
include ./$(DEPDIR)/validate_grapheme.Plo # am--include-marker
include ./$(DEPDIR)/validate_indic.Plo # am--include-marker
include ./$(DEPDIR)/validate_javanese.Plo # am--include-marker
include ./$(DEPDIR)/validate_khmer.Plo # am--include-marker
include ./$(DEPDIR)/validate_myanmar.Plo # am--include-marker
include ./$(DEPDIR)/validator.Plo # am--include-marker
include ./$(DEPDIR)/wordlist2dawg.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-scriptsDATA: $(scripts_DATA)
	@$(NORMAL_INSTALL)
	@list='$(scripts_DATA)'; test -n "$(scriptsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(scriptsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(scriptsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(scriptsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(scriptsdir)" || exit $$?; \
	done

uninstall-scriptsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(scripts_DATA)'; test -n "$(scriptsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(scriptsdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(SCRIPTS) $(DATA) \
		$(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(scriptsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/ambiguous_words.Po
	-rm -f ./$(DEPDIR)/boxchar.Plo
	-rm -f ./$(DEPDIR)/classifier_tester.Po
	-rm -f ./$(DEPDIR)/cntraining.Po
	-rm -f ./$(DEPDIR)/combine_lang_model.Po
	-rm -f ./$(DEPDIR)/combine_tessdata.Po
	-rm -f ./$(DEPDIR)/commandlineflags.Plo
	-rm -f ./$(DEPDIR)/commontraining.Plo
	-rm -f ./$(DEPDIR)/dawg2wordlist.Po
	-rm -f ./$(DEPDIR)/degradeimage.Plo
	-rm -f ./$(DEPDIR)/icuerrorcode.Plo
	-rm -f ./$(DEPDIR)/lang_model_helpers.Plo
	-rm -f ./$(DEPDIR)/ligature_table.Plo
	-rm -f ./$(DEPDIR)/lstmeval.Po
	-rm -f ./$(DEPDIR)/lstmtester.Plo
	-rm -f ./$(DEPDIR)/lstmtraining.Po
	-rm -f ./$(DEPDIR)/merge_unicharsets.Po
	-rm -f ./$(DEPDIR)/mergenf.Po
	-rm -f ./$(DEPDIR)/mftraining.Po
	-rm -f ./$(DEPDIR)/normstrngs.Plo
	-rm -f ./$(DEPDIR)/pango_font_info.Plo
	-rm -f ./$(DEPDIR)/set_unicharset_properties.Po
	-rm -f ./$(DEPDIR)/shapeclustering.Po
	-rm -f ./$(DEPDIR)/stringrenderer.Plo
	-rm -f ./$(DEPDIR)/tessopt.Plo
	-rm -f ./$(DEPDIR)/text2image.Po
	-rm -f ./$(DEPDIR)/tlog.Plo
	-rm -f ./$(DEPDIR)/unicharset_extractor.Po
	-rm -f ./$(DEPDIR)/unicharset_training_utils.Plo
	-rm -f ./$(DEPDIR)/validate_grapheme.Plo
	-rm -f ./$(DEPDIR)/validate_indic.Plo
	-rm -f ./$(DEPDIR)/validate_javanese.Plo
	-rm -f ./$(DEPDIR)/validate_khmer.Plo
	-rm -f ./$(DEPDIR)/validate_myanmar.Plo
	-rm -f ./$(DEPDIR)/validator.Plo
	-rm -f ./$(DEPDIR)/wordlist2dawg.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-scriptsDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/ambiguous_words.Po
	-rm -f ./$(DEPDIR)/boxchar.Plo
	-rm -f ./$(DEPDIR)/classifier_tester.Po
	-rm -f ./$(DEPDIR)/cntraining.Po
	-rm -f ./$(DEPDIR)/combine_lang_model.Po
	-rm -f ./$(DEPDIR)/combine_tessdata.Po
	-rm -f ./$(DEPDIR)/commandlineflags.Plo
	-rm -f ./$(DEPDIR)/commontraining.Plo
	-rm -f ./$(DEPDIR)/dawg2wordlist.Po
	-rm -f ./$(DEPDIR)/degradeimage.Plo
	-rm -f ./$(DEPDIR)/icuerrorcode.Plo
	-rm -f ./$(DEPDIR)/lang_model_helpers.Plo
	-rm -f ./$(DEPDIR)/ligature_table.Plo
	-rm -f ./$(DEPDIR)/lstmeval.Po
	-rm -f ./$(DEPDIR)/lstmtester.Plo
	-rm -f ./$(DEPDIR)/lstmtraining.Po
	-rm -f ./$(DEPDIR)/merge_unicharsets.Po
	-rm -f ./$(DEPDIR)/mergenf.Po
	-rm -f ./$(DEPDIR)/mftraining.Po
	-rm -f ./$(DEPDIR)/normstrngs.Plo
	-rm -f ./$(DEPDIR)/pango_font_info.Plo
	-rm -f ./$(DEPDIR)/set_unicharset_properties.Po
	-rm -f ./$(DEPDIR)/shapeclustering.Po
	-rm -f ./$(DEPDIR)/stringrenderer.Plo
	-rm -f ./$(DEPDIR)/tessopt.Plo
	-rm -f ./$(DEPDIR)/text2image.Po
	-rm -f ./$(DEPDIR)/tlog.Plo
	-rm -f ./$(DEPDIR)/unicharset_extractor.Po
	-rm -f ./$(DEPDIR)/unicharset_training_utils.Plo
	-rm -f ./$(DEPDIR)/validate_grapheme.Plo
	-rm -f ./$(DEPDIR)/validate_indic.Plo
	-rm -f ./$(DEPDIR)/validate_javanese.Plo
	-rm -f ./$(DEPDIR)/validate_khmer.Plo
	-rm -f ./$(DEPDIR)/validate_myanmar.Plo
	-rm -f ./$(DEPDIR)/validator.Plo
	-rm -f ./$(DEPDIR)/wordlist2dawg.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-scriptsDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-scriptsDATA \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-scriptsDATA

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
